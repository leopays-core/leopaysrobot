const Handlebars = require('handlebars');
const settings = require('../../../settings');



const hbsMsgMenuSettingsEN = `
üõ† <b>Settings</b>

What do you want to change?

<b>Your username:</b> /u_{{public_name}}.
`;
// ‚ö†Ô∏è Showing Telegram username is not recommended and is only available to experienced users.
const hbsMsgMenuSettingsRU = `
üõ† <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

–ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?

<b>–¢–µ–∫—É—â–∏–π –ª–æ–≥–∏–Ω:</b> /u_{{public_name}}.
`;
// ‚ö†Ô∏è –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Telegram –ª–æ–≥–∏–Ω–∞ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
const msgMenuSettings = (ctx) => {
  const { i18n, session } = ctx;
  let hbsText = '';
  switch (i18n.shortLanguageCode) {
    case 'en': hbsText = hbsMsgMenuSettingsEN; break;
    case 'ru': hbsText = hbsMsgMenuSettingsRU; break;
  }
  const template = Handlebars.compile(hbsText);

  const public_name = session.user.public_name;
  return template({ public_name, });
}


const hbsMsgMenuSettingsLanguageEN = `
üåç <b>Language</b>

Choose the interface language. The change of language will not affect previously sent messages.
`;
const hbsMsgMenuSettingsLanguageRU = `
üåç <b>–Ø–∑—ã–∫</b>

–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –Ω–µ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
`;
const msgMenuSettingsLanguage = (ctx) => {
  const { i18n } = ctx;
  let hbsText = '';
  switch (i18n.shortLanguageCode) {
    case 'en': hbsText = hbsMsgMenuSettingsLanguageEN; break;
    case 'ru': hbsText = hbsMsgMenuSettingsLanguageRU; break;
  }
  const template = Handlebars.compile(hbsText);
  return template({});
}


module.exports = {
  msgMenuSettingsLanguage,
  msgMenuSettings,
};
